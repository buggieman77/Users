{
   "MYSQL DATABASE FUNCTION": {
      "prefix": "fang",
      "body": [
         "function mysql(",
         "   callable \\$callback,",
         "   mixed \\$datas = null,",
         "   ?int \\$port = null,",
         "   ?string \\$socket = null,",
         "   string \\$databaseName = \"${1}\",",
         "   string \\$databaseTableName = \"${2}\",",
         "   string \\$hostname = \"localhost\",",
         "   string \\$username = \"root\",",
         "   string \\$password = \"${3}\",",
         "): mixed",
         "{",
         "   // Aktifkan mode exception pada MySQLi agar error dilempar sebagai exception",
         "   mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);",
         "",
         "   try {",
         "      // Membuka koneksi ke database dengan parameter yang diberikan",
         "      \\$database = mysqli_connect(\\$hostname, \\$username, \\$password, \\$databaseName, \\$port, \\$socket);",
         "      // Menjalankan callback sesuai operasi CRUD yang diminta",
         "      if(\\$callback == \"read\") {",
         "         return \\$callback(\\$database, \\$databaseTableName);",
         "      } else if (\\$callback == \"insert\" || \"delete\" ) {",
         "         return \\$callback(\\$database, \\$datas, \\$databaseTableName);",
         "      } else {",
         "         return alert(\"no callback\");",
         "      }",
         "   } catch (mysqli_sql_exception \\$error) {",
         "      // Menangkap error MySQLi dan menampilkan pesan error",
         "      die(\"Database Error: \" . \\$error -> getMessage());",
         "   }",
         "}",
         "",
         "function read(mysqli|false \\$connection,string \\$databaseTableName): array {",
         "   // Query SQL untuk mengambil semua data",
         "   \\$query = \"SELECT * FROM \\$databaseTableName\" ;",
         "   // Eksekusi query",
         "   \\$result = mysqli_query(\\$connection, \\$query);",
         "   // Fetch hasil query ke array asosiatif",
         "   \\$database = [];",
         "   while(\\$row = mysqli_fetch_assoc(\\$result)){",
         "      \\$database[] = \\$row;",
         "   }",
         "   // Tutup koneksi",
         "   mysqli_close(\\$connection);",
         "   return \\$database;",
         "}",
         "",
         "function insert(mysqli|false \\$connection,array \\$newDatas,string \\$databaseTableName):string|int {",
         "   // Ambil nama-nama kolom dari array data",
         "   \\$fields = array_keys(\\$newDatas);",
         "   // Buat placeholder '?' sebanyak jumlah kolom",
         "   \\$placeholders = implode(\", \", array_fill(0, count(\\$fields), '?'));",
         "   // Nama kolom diapit backtick agar aman dari reserved word",
         "   \\$fieldList = implode(\", \", array_map(fn(\\$f) => \"`\\$f`\", \\$fields));",
         "   // Tipe data parameter, di sini diasumsikan semua string ('s'), bisa diubah jika ada tipe lain",
         "   \\$types = str_repeat('s', count(\\$fields));",
         "   // Ambil value dari array data",
         "   \\$values = array_values(\\$newDatas);",
         "",
         "   // Query SQL dengan prepared statement",
         "   \\$query = \"INSERT INTO \\$databaseTableName (\\$fieldList) VALUES (\\$placeholders)\";",
         "",
         "   try {",
         "      // Siapkan statement",
         "      \\$stmt = mysqli_prepare(\\$connection, \\$query);",
         "      if (!\\$stmt) {",
         "         throw new Exception(\"Prepare failed: \" . mysqli_error(\\$connection));",
         "      }",
         "      // Bind parameter ke statement",
         "      mysqli_stmt_bind_param(\\$stmt, \\$types, ...\\$values);",
         "      // Eksekusi statement",
         "      mysqli_stmt_execute(\\$stmt);",
         "      // Ambil jumlah baris yang terpengaruh",
         "      \\$value = mysqli_stmt_affected_rows(\\$stmt);",
         "      // Tutup statement",
         "      mysqli_stmt_close(\\$stmt);",
         "      // Tutup koneksi",
         "      mysqli_close(\\$connection);",
         "      return \\$value;",
         "   } catch (Throwable \\$error) {",
         "      die(\"Database Error: \" . \\$error -> getMessage());",
         "   }",
         "}",
         "",
         "function delete(mysqli|false \\$connection, string|int \\$id, string \\$databaseTableName): string|int {",
         "   // Validasi: pastikan id hanya angka",
         "   if (!is_numeric(\\$id)) {",
         "      mysqli_close(\\$connection);",
         "      return 0; // atau bisa lempar error",
         "   }",
         "   // Query SQL dengan prepared statement",
         "   \\$query = \"DELETE FROM \\$databaseTableName WHERE id = ?\";",
         "   try {",
         "      // Siapkan statement",
         "      \\$stmt = mysqli_prepare(\\$connection, \\$query);",
         "      if (!\\$stmt) {",
         "         throw new Exception(\"Prepare failed: \" . mysqli_error(\\$connection));",
         "      }",
         "      // Bind parameter id (asumsikan integer)",
         "      mysqli_stmt_bind_param(\\$stmt, 'i', \\$id);",
         "      // Eksekusi statement",
         "      mysqli_stmt_execute(\\$stmt);",
         "      // Ambil jumlah baris yang terpengaruh",
         "      \\$value = mysqli_stmt_affected_rows(\\$stmt);",
         "      // Tutup statement",
         "      mysqli_stmt_close(\\$stmt);",
         "      // Tutup koneksi",
         "      mysqli_close(\\$connection);",
         "      return \\$value;",
         "   } catch (Throwable \\$error) {",
         "      die(\"Database Error: \" . \\$error -> getMessage());",
         "   }",
         "}",
         "",
         "function alert(string \\$message): void {",
         "   echo \"",
         "      <script>",
         "         alert(\" . json_encode(\\$message) . \");",
         "         // Redirect ke root folder, tanpa harus tulis index.php",
         "         document.location.href = './';",
         "      </script>",
         "   \"; ",
         "}"
      ],
      "description": "mysqlDatabase function"
   },
   "CALLBACK CREATE MYSQL DATABASE FUNCTION": {
      "prefix": "kolbek",
      "body": [
         "// Jika form disubmit (tombol Create ditekan)",
         "if (isset(\\$_POST['submit'",
         "])) {",
         "   // Ambil data dari form, lakukan sanitasi dengan htmlspecialchars untuk mencegah XSS",
         "   \\$new${1:Datas} = [",
         "      \"${2:field}\" => htmlspecialchars(\\$_POST[\"${2:field}\"]),${0}",
         "   ];",
         "",
         "   // Insert data ke database, jika berhasil tampilkan alert sukses, jika gagal tampilkan alert gagal",
         "   if ( mysql(\"insert\",\\$new${1:Datas}) > 0 ) {",
         "      alert(\"${1:Datas} : \".html_entity_decode(\\$new${1:Datas}['${2:field}']).\" successfully added !\");",
         "   } else {",
         "      alert(\"${1:Datas} : \".html_entity_decode(\\$new${1:Datas}['${2:field}']).\"  failed to be added !\");",
         "}",
         "}"
      ],
      "description": "MYSQL CREATE"
   },
   "CALLBACK READ MYSQL DATABASE  FUNCTION": {
      "prefix": "kolbek",
      "body": [
         "// Ambil seluruh data ${1:nama data} dari database dan simpan ke array $${1:nama data}s",
         "\\$${1:nama data}s = mysql(\"read\");"
      ],
      "description": "MYSQL READ"
   },
   "CALLBACK DELETE MYSQL DATABASE  FUNCTION": {
      "prefix": "kolbek",
      "body": [
         "// Fitur hapus data baris ${1:data} hanya jika ada parameter GET id, action=delete, dan request POST",
         "if (\\$_SERVER['REQUEST_METHOD'] === 'POST'",
         "     && isset(\\$_POST['id']) ",
         "     && isset(\\$_POST['action']) ",
         "     && \\$_POST['action'] === 'delete') ",
         "{",
         "  // Ambil nama ${1:data} dari parameter POST untuk pesan notifikasi",
         "  \\$${1:data} = \\$_POST[\"${2:nama data}\"];",
         "  \\$id = (int) \\$_POST['id'];",
         "",
         "  // Jika proses delete berhasil (baris terhapus > 0)",
         "  if ( mysql(\"delete\", \\$id) > 0 ) {",
         "  // Tampilkan alert sukses",
         "  alert(\"\\$${1:data} has been deleted !\");",
         "  } else {",
         "  // Tampilkan alert gagal",
         "  alert(\"\\$${1:data} failed to delete !\");",
         "  }",
         "}",
      ],
      "description": "MYSQL DELETE"
   },
   "Try and Catch Error": {
      "prefix": "trc",
      "body": [
         "try {",
         "   ${0}",
         "} catch (Throwable \\$error) {",
         "   die(\"${1:Database} Error: \" . \\$error -> getMessage());",
         "}"
      ],
      "description": "error handling"
   },
}