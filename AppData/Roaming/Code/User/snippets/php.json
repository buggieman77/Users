  {
    "TRY AND CATCH": {
      "prefix": "trc",
      "body": [
        "try {",
        "   ${0}",
        "} catch (Throwable \\$error) {",
        "   die(\"${1:Database} Error: \" . \\$error -> getMessage());",
        "}"
      ],
      "description": "error handling"
    },
    "ASSOC ARRAY": {
      "prefix": "arr",
      "body": [
        "\\$${1:array} = [",
        "  \"${2:key}\" => \"${3:value}\",",
        "  \"${4:key}\" => \"${5:value}\"",
        "]"
      ],
      "description": "create array assoc"
    },
    "NUMERIC ARRAY": {
      "prefix": "arr",
      "body": [
        "\\$${1:array} = [${0}]",
      ],
      "description": "create array Numeric"
    },
    "VAR_DUMP SKELETON": {
      "prefix": "var_dump",
      "body": [
        "var_dump(\\$${0}); die;"
      ],
      "description": "create var dump skeleton"
    },
    "ISSET SKELETON": {
      "prefix": "isset",
      "body": [
        "isset(\\$${0})"
      ],
      "description": "create isset skeleton"
    },
    "FUNCTION SKELETON": {
      "prefix": "function",
      "body": [
        "function ${1}(${2:mixed} \\$${3}): ${4:mixed}",
        "{",
        "   ${0}",
        "",
        "   ${5:return true;}",
        "}",
      ],
      "description": "create function skeleton"
    },
    "FUNCTION __CONSTRUCT": {
      "prefix": "construct",
      "body": [
        "public function __construct(${1:string} \\$${2})",
        "{",
        "   \\$this->${2} = \\$${2};${0}",
        "",
        "}",
      ],
      "description": "create function skeleton"
    },
    "CALL PARENT __CONSTRUCT": {
      "prefix": "parent",
      "body": [
        "parent::__construct(\\$${0});",
      ],
      "description": "create function skeleton"
    },
    "FOREACH SKELETON": {
      "prefix": "foreach",
      "body": [
        "foreach(\\$${1} as \\$${2:key} => \\$${3:value}) {",
        "   ${0}",
        "}",
      ],
      "description": "create foreach skeleton"
    },
    "HEADER FUNCTION SKELETON": {
      "prefix": "header",
      "body": [
        "header(\"Location: ${0}\", true, 302);",
        "exit;"
      ],
      "description": "header function skeleton"
    },
    "IF SKELETON": {
      "prefix": "if",
      "body": [
        "if (${1}) ${0}"
      ],
      "description": "IF skeleton"
    },
    "THIS SKELETON": {
      "prefix": "this",
      "body": [
        "\\$this->${0}"
      ],
      "description": "this skeleton"
    },
    "SLUGIFY URL HELPER": {
      "prefix": "slugify",
      "body": [
        "  function slugify(\\$text): string",
        "{",
        "    // Transliterate",
        "  \\$text = iconv(\"UTF-8\", \"ASCII//TRANSLIT\", \\$text);",
        "    // Replace non letter/digit",
        "  \\$text = preg_replace(\"/[^\\p{L}\\p{N}_\\-]+/u\", \"-\", \\$text);",
        "    // Trim dash at the beginning and end",
        "  \\$text = trim(\\$text, \"-\");",
        "    // Convert to lower case(latin) ",
        "  \\$text = strtolower(\\$text);",
        "  // @return (string by urlencode function)",
        "  return rawurlencode(\\$text);",
        "}",
      ],
      "description": "this skeleton"
    },
  }