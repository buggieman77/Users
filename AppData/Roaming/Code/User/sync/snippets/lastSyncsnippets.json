{"ref":"df93ab57-5b61-455c-b70d-bc8b2c1d2909","syncData":{"version":1,"machineId":"6a9c6c92-b481-4b20-b12e-16f4acc9cdac","content":"{\"javascript.json\":\"{\\n\\t// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"php.json\":\"{\\n   \\\"MYSQL DATABASE FUNCTION\\\": {\\n      \\\"prefix\\\": \\\"fang\\\",\\n      \\\"body\\\": [\\n         \\\"function mysql(\\\",\\n         \\\"   callable \\\\\\\\$callback,\\\",\\n         \\\"   mixed \\\\\\\\$datas = null,\\\",\\n         \\\"   ?int \\\\\\\\$port = null,\\\",\\n         \\\"   ?string \\\\\\\\$socket = null,\\\",\\n         \\\"   string \\\\\\\\$databaseName = \\\\\\\"${1}\\\\\\\",\\\",\\n         \\\"   string \\\\\\\\$databaseTableName = \\\\\\\"${2}\\\\\\\",\\\",\\n         \\\"   string \\\\\\\\$hostname = \\\\\\\"localhost\\\\\\\",\\\",\\n         \\\"   string \\\\\\\\$username = \\\\\\\"root\\\\\\\",\\\",\\n         \\\"   string \\\\\\\\$password = \\\\\\\"${3}\\\\\\\",\\\",\\n         \\\"): mixed\\\",\\n         \\\"{\\\",\\n         \\\"   // Aktifkan mode exception pada MySQLi agar error dilempar sebagai exception\\\",\\n         \\\"   mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\\\",\\n         \\\"\\\",\\n         \\\"   try {\\\",\\n         \\\"      // Membuka koneksi ke database dengan parameter yang diberikan\\\",\\n         \\\"      \\\\\\\\$database = mysqli_connect(\\\\\\\\$hostname, \\\\\\\\$username, \\\\\\\\$password, \\\\\\\\$databaseName, \\\\\\\\$port, \\\\\\\\$socket);\\\",\\n         \\\"      // Menjalankan callback sesuai operasi CRUD yang diminta\\\",\\n         \\\"      return \\\\\\\\$callback(\\\\\\\\$database, \\\\\\\\$datas, \\\\\\\\$databaseTableName);\\\",\\n         \\\"   } catch (mysqli_sql_exception \\\\\\\\$error) {\\\",\\n         \\\"      // Menangkap error MySQLi dan menampilkan pesan error\\\",\\n         \\\"      die(\\\\\\\"Database Error: \\\\\\\" . \\\\\\\\$error -> getMessage());\\\",\\n         \\\"   }\\\",\\n         \\\"}\\\",\\n         \\\"\\\",\\n         \\\"function read(mysqli|false \\\\\\\\$connection, ?int \\\\\\\\$id = null, string \\\\\\\\$databaseTableName): array {\\\",\\n         \\\"   \\\\\\\\$query = isset(\\\\\\\\$id) ? \\\\\\\"SELECT * FROM \\\\\\\\$databaseTableName WHERE id = \\\\\\\\$id\\\\\\\" : \\\\\\\"SELECT * FROM \\\\\\\\$databaseTableName\\\\\\\";\\\",\\n         \\\"   // Eksekusi query\\\",\\n         \\\"   \\\\\\\\$result = mysqli_query(\\\\\\\\$connection, \\\\\\\\$query);\\\",\\n         \\\"   // Fetch hasil query ke array asosiatif\\\",\\n         \\\"   \\\\\\\\$database = [];\\\",\\n         \\\"   while(\\\\\\\\$row = mysqli_fetch_assoc(\\\\\\\\$result)){\\\",\\n         \\\"      \\\\\\\\$database[] = \\\\\\\\$row;\\\",\\n         \\\"   }\\\",\\n         \\\"   // Tutup koneksi\\\",\\n         \\\"   mysqli_close(\\\\\\\\$connection);\\\",\\n         \\\"   return \\\\\\\\$database;\\\",\\n         \\\"}\\\",\\n         \\\"\\\",\\n         \\\"function insert(mysqli|false \\\\\\\\$connection,array \\\\\\\\$newDatas,string \\\\\\\\$databaseTableName):string|int {\\\",\\n         \\\"   // Ambil nama-nama kolom dari array data\\\",\\n         \\\"   \\\\\\\\$fields = array_keys(\\\\\\\\$newDatas);\\\",\\n         \\\"   // Buat placeholder '?' sebanyak jumlah kolom\\\",\\n         \\\"   \\\\\\\\$placeholders = implode(\\\\\\\", \\\\\\\", array_fill(0, count(\\\\\\\\$fields), '?'));\\\",\\n         \\\"   // Nama kolom diapit backtick agar aman dari reserved word\\\",\\n         \\\"   \\\\\\\\$fieldList = implode(\\\\\\\", \\\\\\\", array_map(fn(\\\\\\\\$f) => \\\\\\\"`\\\\\\\\$f`\\\\\\\", \\\\\\\\$fields));\\\",\\n         \\\"   // Tipe data parameter, di sini diasumsikan semua string ('s'), bisa diubah jika ada tipe lain\\\",\\n         \\\"   \\\\\\\\$types = str_repeat('s', count(\\\\\\\\$fields));\\\",\\n         \\\"   // Ambil value dari array data\\\",\\n         \\\"   \\\\\\\\$values = array_values(\\\\\\\\$newDatas);\\\",\\n         \\\"\\\",\\n         \\\"   // Query SQL dengan prepared statement\\\",\\n         \\\"   \\\\\\\\$query = \\\\\\\"INSERT INTO \\\\\\\\$databaseTableName (\\\\\\\\$fieldList) VALUES (\\\\\\\\$placeholders)\\\\\\\";\\\",\\n         \\\"\\\",\\n         \\\"   try {\\\",\\n         \\\"      // Siapkan statement\\\",\\n         \\\"      \\\\\\\\$stmt = mysqli_prepare(\\\\\\\\$connection, \\\\\\\\$query);\\\",\\n         \\\"      if (!\\\\\\\\$stmt) {\\\",\\n         \\\"         throw new Exception(\\\\\\\"Prepare failed: \\\\\\\" . mysqli_error(\\\\\\\\$connection));\\\",\\n         \\\"      }\\\",\\n         \\\"      // Bind parameter ke statement\\\",\\n         \\\"      mysqli_stmt_bind_param(\\\\\\\\$stmt, \\\\\\\\$types, ...\\\\\\\\$values);\\\",\\n         \\\"      // Eksekusi statement\\\",\\n         \\\"      mysqli_stmt_execute(\\\\\\\\$stmt);\\\",\\n         \\\"      // Ambil jumlah baris yang terpengaruh\\\",\\n         \\\"      \\\\\\\\$value = mysqli_stmt_affected_rows(\\\\\\\\$stmt);\\\",\\n         \\\"      // Tutup statement\\\",\\n         \\\"      mysqli_stmt_close(\\\\\\\\$stmt);\\\",\\n         \\\"      // Tutup koneksi\\\",\\n         \\\"      mysqli_close(\\\\\\\\$connection);\\\",\\n         \\\"      return \\\\\\\\$value;\\\",\\n         \\\"   } catch (Throwable \\\\\\\\$error) {\\\",\\n         \\\"      die(\\\\\\\"Database Error: \\\\\\\" . \\\\\\\\$error -> getMessage());\\\",\\n         \\\"   }\\\",\\n         \\\"}\\\",\\n         \\\"\\\",\\n         \\\"function delete(mysqli|false \\\\\\\\$connection, string|int \\\\\\\\$id, string \\\\\\\\$databaseTableName): string|int {\\\",\\n         \\\"   // Validasi: pastikan id hanya angka\\\",\\n         \\\"   if (!is_numeric(\\\\\\\\$id)) {\\\",\\n         \\\"      mysqli_close(\\\\\\\\$connection);\\\",\\n         \\\"      return 0; // atau bisa lempar error\\\",\\n         \\\"   }\\\",\\n         \\\"   // Query SQL dengan prepared statement\\\",\\n         \\\"   \\\\\\\\$query = \\\\\\\"DELETE FROM \\\\\\\\$databaseTableName WHERE id = ?\\\\\\\";\\\",\\n         \\\"   try {\\\",\\n         \\\"      // Siapkan statement\\\",\\n         \\\"      \\\\\\\\$stmt = mysqli_prepare(\\\\\\\\$connection, \\\\\\\\$query);\\\",\\n         \\\"      if (!\\\\\\\\$stmt) {\\\",\\n         \\\"         throw new Exception(\\\\\\\"Prepare failed: \\\\\\\" . mysqli_error(\\\\\\\\$connection));\\\",\\n         \\\"      }\\\",\\n         \\\"      // Bind parameter id (asumsikan integer)\\\",\\n         \\\"      mysqli_stmt_bind_param(\\\\\\\\$stmt, 'i', \\\\\\\\$id);\\\",\\n         \\\"      // Eksekusi statement\\\",\\n         \\\"      mysqli_stmt_execute(\\\\\\\\$stmt);\\\",\\n         \\\"      // Ambil jumlah baris yang terpengaruh\\\",\\n         \\\"      \\\\\\\\$value = mysqli_stmt_affected_rows(\\\\\\\\$stmt);\\\",\\n         \\\"      // Tutup statement\\\",\\n         \\\"      mysqli_stmt_close(\\\\\\\\$stmt);\\\",\\n         \\\"      // Tutup koneksi\\\",\\n         \\\"      mysqli_close(\\\\\\\\$connection);\\\",\\n         \\\"      return \\\\\\\\$value;\\\",\\n         \\\"   } catch (Throwable \\\\\\\\$error) {\\\",\\n         \\\"      die(\\\\\\\"Database Error: \\\\\\\" . \\\\\\\\$error -> getMessage());\\\",\\n         \\\"   }\\\",\\n         \\\"}\\\",\\n         \\\"\\\",\\n         \\\"function update(mysqli|false \\\\\\\\$connection, array \\\\\\\\$newDatas, string \\\\\\\\$databaseTableName): string|int {\\\",\\n         \\\"   try {\\\",\\n         \\\"      // check apakah id ada di array, dan berupa angka \\\",\\n         \\\"      if (!isset(\\\\\\\\$newDatas[\\\\\\\"id\\\\\\\"]) || !is_numeric(\\\\\\\\$newDatas[\\\\\\\"id\\\\\\\"])){\\\",\\n         \\\"      throw new Exception (\\\\\\\"ID NOT FOUND\\\\\\\");\\\",\\n         \\\"      }\\\",\\n         \\\"      // simpan nilai id sebagai integer\\\",\\n         \\\"      \\\\\\\\$id = (int) \\\\\\\\$newDatas[\\\\\\\"id\\\\\\\"];\\\",\\n         \\\"      // hapus id dari array\\\",\\n         \\\"      unset(\\\\\\\\$newDatas[\\\\\\\"id\\\\\\\"]);\\\",\\n         \\\"\\\",\\n         \\\"      //buat array untuk placeholder\\\",\\n         \\\"      \\\\\\\\$placeholderArray = array_map(fn(\\\\\\\\$field) => \\\\\\\"`\\\\\\\\$field` = ?\\\\\\\", array_keys(\\\\\\\\$newDatas));\\\",\\n         \\\"      // ubah jadi string\\\",\\n         \\\"      \\\\\\\\$placeholder = implode(\\\\\\\", \\\\\\\",\\\\\\\\$placeholderArray);\\\",\\n         \\\"\\\",\\n         \\\"      // masukan value ke dalam array values \\\",\\n         \\\"      \\\\\\\\$values = array_values(\\\\\\\\$newDatas);\\\",\\n         \\\"      // tambahkan id kedalam array values\\\",\\n         \\\"      \\\\\\\\$values[] = \\\\\\\\$id;\\\",\\n         \\\"      // set tipe data semua value (assumsi semua string kecuali id)\\\",\\n         \\\"      \\\\\\\\$types = str_repeat(\\\\\\\"s\\\\\\\", count(\\\\\\\\$values) - 1) . \\\\\\\"i\\\\\\\";\\\",\\n         \\\"\\\",\\n         \\\"      // siapkan query\\\",\\n         \\\"      \\\\\\\\$query = \\\\\\\"UPDATE \\\\\\\\$databaseTableName SET \\\\\\\\$placeholder WHERE id = ?\\\\\\\";\\\",\\n         \\\"      // siapkan statement\\\",\\n         \\\"      \\\\\\\\$statement = mysqli_prepare(\\\\\\\\$connection,\\\\\\\\$query);\\\",\\n         \\\"\\\",\\n         \\\"      // kaitkan semua value kedalam statement\\\",\\n         \\\"      mysqli_stmt_bind_param(\\\\\\\\$statement, \\\\\\\\$types, ...\\\\\\\\$values);\\\",\\n         \\\"      // jalankan statement\\\",\\n         \\\"      mysqli_stmt_execute(\\\\\\\\$statement);\\\",\\n         \\\"\\\",\\n         \\\"      // tangkap nilai\\\",\\n         \\\"      \\\\\\\\$value = mysqli_stmt_affected_rows(\\\\\\\\$statement);\\\",\\n         \\\"\\\",\\n         \\\"      // tutup koneksi\\\",\\n         \\\"      mysqli_stmt_close(\\\\\\\\$statement);\\\",\\n         \\\"      mysqli_close(\\\\\\\\$connection);\\\",\\n         \\\"\\\",\\n         \\\"      // kembalikan nilai\\\",\\n         \\\"      return \\\\\\\\$value;\\\",\\n         \\\"   } catch (Throwable \\\\\\\\$error) {\\\",\\n         \\\"      die(\\\\\\\"Error: \\\\\\\" . \\\\\\\\$error -> getMessage());\\\",\\n         \\\"   }\\\",\\n         \\\"}\\\",\\n         \\\"\\\",\\n         \\\"function alert(string \\\\\\\\$message): void {\\\",\\n         \\\"   echo \\\\\\\"\\\",\\n         \\\"      <script>\\\",\\n         \\\"         alert(\\\\\\\" . json_encode(\\\\\\\\$message) . \\\\\\\");\\\",\\n         \\\"         // Redirect ke root folder, tanpa harus tulis index.php\\\",\\n         \\\"         document.location.href = './';\\\",\\n         \\\"      </script>\\\",\\n         \\\"   \\\\\\\"; \\\",\\n         \\\"}\\\"\\n      ],\\n      \\\"description\\\": \\\"mysqlDatabase function\\\"\\n   },\\n   \\\"CALLBACK CREATE MYSQL DATABASE FUNCTION\\\": {\\n      \\\"prefix\\\": \\\"kolbek\\\",\\n      \\\"body\\\": [\\n         \\\"// Jika form disubmit (tombol Create ditekan)\\\",\\n         \\\"if (isset(\\\\\\\\$_POST['submit'\\\",\\n         \\\"])) {\\\",\\n         \\\"   // Ambil data dari form, lakukan sanitasi dengan htmlspecialchars untuk mencegah XSS\\\",\\n         \\\"   \\\\\\\\$new${1:Datas} = [\\\",\\n         \\\"      \\\\\\\"${2:field}\\\\\\\" => htmlspecialchars(\\\\\\\\$_POST[\\\\\\\"${2:field}\\\\\\\"]),${0}\\\",\\n         \\\"   ];\\\",\\n         \\\"\\\",\\n         \\\"   // Insert data ke database, jika berhasil tampilkan alert sukses, jika gagal tampilkan alert gagal\\\",\\n         \\\"   if ( mysql(\\\\\\\"insert\\\\\\\",\\\\\\\\$new${1:Datas}) > 0 ) {\\\",\\n         \\\"      alert(\\\\\\\"${1:Datas} : \\\\\\\".html_entity_decode(\\\\\\\\$new${1:Datas}['${2:field}']).\\\\\\\" successfully added !\\\\\\\");\\\",\\n         \\\"   } else {\\\",\\n         \\\"      alert(\\\\\\\"${1:Datas} : \\\\\\\".html_entity_decode(\\\\\\\\$new${1:Datas}['${2:field}']).\\\\\\\"  failed to be added !\\\\\\\");\\\",\\n         \\\"}\\\",\\n         \\\"}\\\"\\n      ],\\n      \\\"description\\\": \\\"MYSQL CREATE\\\"\\n   },\\n   \\\"CALLBACK READ MYSQL DATABASE  FUNCTION\\\": {\\n      \\\"prefix\\\": \\\"kolbek\\\",\\n      \\\"body\\\": [\\n         \\\"// Ambil seluruh data ${1:nama data} dari database dan simpan ke array $${1:nama data}s\\\",\\n         \\\"\\\\\\\\$${1:nama data}s = mysql(\\\\\\\"read\\\\\\\");\\\"\\n      ],\\n      \\\"description\\\": \\\"MYSQL READ\\\"\\n   },\\n   \\\"CALLBACK UPDATED MYSQL DATABASE  FUNCTION\\\": {\\n      \\\"prefix\\\": \\\"kolbek\\\",\\n      \\\"body\\\": [\\n         \\\"// masukan seluruh data ${1:data name} yang dipilih ke aray ${1:data name}\\\",\\n         \\\"\\\\\\\\$${1:data name} = mysql(\\\\\\\"read\\\\\\\",\\\\\\\\$_POST[\\\\\\\"id\\\\\\\"])[0];\\\",\\n         \\\"\\\",\\n         \\\"// Jika form disubmit (tombol Update ditekan)\\\",\\n         \\\"if (isset(\\\\\\\\$_POST[\\\\\\\"submit\\\\\\\"])) {\\\",\\n         \\\"   // Ambil data dari form, lakukan sanitasi dengan htmlspecialchars untuk mencegah XSS\\\",\\n         \\\"   \\\\\\\\$edit${2:Data Name} = [\\\",\\n         \\\"      \\\\\\\"id\\\\\\\" => \\\\\\\\$_POST[\\\\\\\"id\\\\\\\"],\\\",\\n         \\\"   ];\\\",\\n         \\\"\\\",\\n         \\\"   // Insert data ke database, jika berhasil tampilkan alert sukses, jika gagal tampilkan alert gagal\\\",\\n         \\\"   if ( mysql(\\\\\\\"update\\\\\\\",\\\\\\\\$edit${2:Data Name}) > 0 ) {\\\",\\n         \\\"      alert(\\\\\\\"Update ${1:data name} : \\\\\\\".html_entity_decode(\\\\\\\\$edit${2:Data Name}['title']).\\\\\\\" success !\\\\\\\");\\\",\\n         \\\"   } else {\\\",\\n         \\\"      alert(\\\\\\\"${1:data name} : \\\\\\\".html_entity_decode(\\\\\\\\$edit${2:Data Name}['title']).\\\\\\\"  failed to be update !\\\\\\\");\\\",\\n         \\\"   }\\\",\\n         \\\"}\\\"\\n      ],\\n      \\\"description\\\": \\\"MYSQL UPDATED\\\"\\n   },\\n   \\\"CALLBACK DELETE MYSQL DATABASE  FUNCTION\\\": {\\n      \\\"prefix\\\": \\\"kolbek\\\",\\n      \\\"body\\\": [\\n         \\\"require \\\\\\\"${1:data}-database.php\\\\\\\";\\\",\\n         \\\"\\\",\\n         \\\"// Fitur hapus data ${1:data} hanya jika ada parameter GET id, action=delete, dan request POST\\\",\\n         \\\"if (\\\\\\\\$_SERVER['REQUEST_METHOD'] === 'POST'\\\",\\n         \\\"     && isset(\\\\\\\\$_POST['id']) \\\",\\n         \\\"     && isset(\\\\\\\\$_POST['action']) \\\",\\n         \\\"     && \\\\\\\\$_POST['action'] === 'delete') \\\",\\n         \\\"{\\\",\\n         \\\"  // Ambil nama ${1:data} dari parameter POST untuk pesan notifikasi\\\",\\n         \\\"  \\\\\\\\$${1:data} = \\\\\\\\$_POST[\\\\\\\"${2:nama data}\\\\\\\"];\\\",\\n         \\\"  \\\\\\\\$id = (int) \\\\\\\\$_POST['id'];\\\",\\n         \\\"\\\",\\n         \\\"  // Jika proses delete berhasil (baris terhapus > 0)\\\",\\n         \\\"  if ( mysql(\\\\\\\"delete\\\\\\\", \\\\\\\\$id) > 0 ) {\\\",\\n         \\\"  // Tampilkan alert sukses\\\",\\n         \\\"  alert(\\\\\\\"\\\\\\\\$${1:data} has been deleted !\\\\\\\");\\\",\\n         \\\"  } else {\\\",\\n         \\\"  // Tampilkan alert gagal\\\",\\n         \\\"  alert(\\\\\\\"\\\\\\\\$${1:data} failed to delete !\\\\\\\");\\\",\\n         \\\"  }\\\",\\n         \\\"}\\\",\\n      ],\\n      \\\"description\\\": \\\"MYSQL DELETE\\\"\\n   },\\n   \\\"Try and Catch Error\\\": {\\n      \\\"prefix\\\": \\\"trc\\\",\\n      \\\"body\\\": [\\n         \\\"try {\\\",\\n         \\\"   ${0}\\\",\\n         \\\"} catch (Throwable \\\\\\\\$error) {\\\",\\n         \\\"   die(\\\\\\\"${1:Database} Error: \\\\\\\" . \\\\\\\\$error -> getMessage());\\\",\\n         \\\"}\\\"\\n      ],\\n      \\\"description\\\": \\\"error handling\\\"\\n   },\\n}\",\"html.json\":\"{\\n   \\\"PHP TAG\\\": {\\n      \\\"prefix\\\": \\\"php\\\",\\n      \\\"body\\\": [\\n         \\\"<?php\\\",\\n         \\\"\\\",\\n         \\\"${0}\\\",\\n         \\\"\\\",\\n         \\\"?>\\\"\\n      ],\\n      \\\"description\\\": \\\"insert php tag\\\"\\n   },\\n   \\\"PHP ECHO\\\": {\\n      \\\"prefix\\\": \\\"echo\\\",\\n      \\\"body\\\": [\\n         \\\"<?= \\\\\\\\$${0} ?>\\\"\\n      ],\\n      \\\"description\\\": \\\"insert php echo\\\"\\n   },\\n   \\\"FORM ELEMENT TAG\\\": {\\n      \\\"prefix\\\": \\\"formel\\\",\\n      \\\"body\\\": [\\n         \\\"<label for=\\\\\\\"${1:label}\\\\\\\">${0}${1:label name} :</label>\\\\n<input type=\\\\\\\"text\\\\\\\" id=\\\\\\\"${1:label}\\\\\\\" placeholder=\\\\\\\"${1:label}\\\\\\\" name=\\\\\\\"${1:label}\\\\\\\" required>\\\"\\n      ],\\n      \\\"description\\\": \\\"Form Element\\\"\\n   },\\n   \\\"SUBMIT BUTTON\\\": {\\n      \\\"prefix\\\": \\\"subb\\\",\\n      \\\"body\\\": [\\n         \\\"<button type=\\\\\\\"submit\\\\\\\" name=\\\\\\\"submit\\\\\\\">${0}</button>\\\"\\n      ],\\n      \\\"description\\\": \\\"Form Element\\\"\\n   },\\n   \\\"TABLE TAG\\\": {\\n      \\\"prefix\\\": \\\"table\\\",\\n      \\\"body\\\": [\\n         \\\"<table border=\\\\\\\"1\\\\\\\" cellpadding=\\\\\\\"10\\\\\\\" cellspacing=\\\\\\\"0\\\\\\\">\\\",\\n         \\\"   ${0}\\\",\\n         \\\"</table>\\\"\\n      ],\\n      \\\"description\\\": \\\"table tag\\\"\\n   },\\n   \\\"PHP MYSQL READ\\\": {\\n      \\\"prefix\\\": \\\"mysqldb\\\",\\n      \\\"body\\\": [\\n         \\\"<?php foreach (\\\\\\\\$${1:data}s as \\\\\\\\$index => \\\\\\\\$${1:data}) : ?>\\\",\\n         \\\"   ${0}\\\",\\n         \\\"<?php endforeach ?>\\\"\\n      ],\\n      \\\"description\\\": \\\"SHOW MYSQL DATABASE\\\"\\n   },\\n   \\\"PHP MYSQL DELETE\\\": {\\n      \\\"prefix\\\": \\\"mysqldb\\\",\\n      \\\"body\\\": [\\n         \\\"<form\\\",\\n         \\\"  action = \\\\\\\"delete-${1:data}.php\\\\\\\"\\\",\\n         \\\"  method = \\\\\\\"post\\\\\\\"\\\",\\n         \\\"  data-action = \\\\\\\"delete\\\\\\\"\\\",\\n         \\\"  data-name = \\\\\\\"<?= htmlspecialchars(json_encode(\\\\\\\\$${1:data}[\\\\\\\"${2:field}\\\\\\\"]), ENT_QUOTES, \\\\\\\"UTF-8\\\\\\\") ?>\\\\\\\"\\\",\\n         \\\"  onsubmit=\\\\\\\"return showConfirm(this.dataset.action, this.dataset.name)\\\\\\\"\\\",\\n         \\\">\\\",\\n         \\\"   <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"id\\\\\\\" value=\\\\\\\"<?= \\\\\\\\$${1:data}[\\\\\\\"id\\\\\\\"] ?>\\\\\\\">\\\",\\n         \\\"   <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"${2:field}\\\\\\\" value=\\\\\\\"<?= (\\\\\\\\$${1:data}[\\\\\\\"${2:field}\\\\\\\"]) ?>\\\\\\\">\\\",\\n         \\\"   <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"action\\\\\\\" value=\\\\\\\"delete\\\\\\\">\\\",\\n         \\\"   <button type=\\\\\\\"submit\\\\\\\">DELETE</button>\\\",\\n         \\\"</form>\\\",\\n      ],\\n      \\\"description\\\": \\\"BUTTON MYSQL DELETE\\\"\\n   },\\n   \\\"PHP MYSQL CREATE\\\": {\\n      \\\"prefix\\\": \\\"mysqldb\\\",\\n      \\\"body\\\": [\\n         \\\"<form\\\",\\n         \\\"   action = \\\\\\\"new-novel.php\\\\\\\"\\\",\\n         \\\"   method = \\\\\\\"post\\\\\\\"\\\",\\n         \\\">\\\",\\n         \\\"      <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"id\\\\\\\" value=\\\\\\\"<?= \\\\\\\\$novel[\\\\\\\"id\\\\\\\"] ?>\\\\\\\">\\\",\\n         \\\"      <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"title\\\\\\\" value=\\\\\\\"<?= (\\\\\\\\$novel[\\\\\\\"title\\\\\\\"]) ?>\\\\\\\">\\\",\\n         \\\"      <input type=\\\\\\\"hidden\\\\\\\" name=\\\\\\\"action\\\\\\\" value=\\\\\\\"update\\\\\\\">\\\",\\n         \\\"      <button type=\\\\\\\"submit\\\\\\\">EDIT</button>\\\",\\n         \\\"</form>\\\",\\n      ],\\n      \\\"description\\\": \\\"SHOW MYSQL DATABASE\\\"\\n   },\\n}\"}"}}